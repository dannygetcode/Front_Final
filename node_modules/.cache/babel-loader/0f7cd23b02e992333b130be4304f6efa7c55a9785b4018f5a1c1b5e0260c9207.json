{"ast":null,"code":"import back from \"./back\";\nclass crud {\n  async GET(resource) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async POST(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async PUT(resource, body) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"PUT\",\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n  async DELETE(resource) {\n    const token = localStorage.getItem(\"token\");\n    let bearer;\n    if (token === \"\") {\n      bearer = \"\";\n    } else {\n      bearer = `${token}`;\n    }\n    const data = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": bearer\n      }\n    };\n    const url = `${back.api.baseURL}${resource}`;\n    let response = await (await fetch(url, data)).json();\n    return response;\n  }\n}\nexport default new crud();","map":{"version":3,"names":["back","crud","GET","resource","token","localStorage","getItem","bearer","data","method","headers","url","api","baseURL","response","fetch","json","POST","body","JSON","stringify","PUT","DELETE"],"sources":["C:/Users/DELL/Desktop/Rama Principal/CICLO 4 MinTic UNAB/Codigos/Front e-commerce/src/conexiones/crud.js"],"sourcesContent":["import back from \"./back\";\r\n\r\nclass crud {\r\n  async GET(resource) {\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if (token === \"\") {\r\n      bearer = \"\";\r\n    } else {\r\n      bearer = `${token}`;\r\n    }\r\n\r\n    const data = {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": bearer,\r\n      },\r\n    };\r\n    const url = `${back.api.baseURL}${resource}`;\r\n    let response = await (await fetch(url, data)).json();\r\n    return response;\r\n  }\r\n  async POST(resource, body) {\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if (token === \"\") {\r\n      bearer = \"\";\r\n    } else {\r\n      bearer = `${token}`;\r\n    }\r\n\r\n    const data = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": bearer,\r\n      },\r\n    };\r\n    const url = `${back.api.baseURL}${resource}`;\r\n    let response = await (await fetch(url, data)).json();\r\n    return response;\r\n  }\r\n  async PUT(resource, body) {\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if (token === \"\") {\r\n      bearer = \"\";\r\n    } else {\r\n      bearer = `${token}`;\r\n    }\r\n\r\n    const data = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(body),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": bearer,\r\n      },\r\n    };\r\n    const url = `${back.api.baseURL}${resource}`;\r\n    let response = await (await fetch(url, data)).json();\r\n    return response;\r\n  }\r\n  async DELETE(resource) {\r\n    const token = localStorage.getItem(\"token\");\r\n    let bearer;\r\n    if (token === \"\") {\r\n      bearer = \"\";\r\n    } else {\r\n      bearer = `${token}`;\r\n    }\r\n\r\n    const data = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": bearer,\r\n      },\r\n    };\r\n    const url = `${back.api.baseURL}${resource}`;\r\n    let response = await (await fetch(url, data)).json();\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default new crud();\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}